name: smart-lighting

services:
  # MICROSERVICES
  decision-service:
    build:
      context: "./Decision Service"
      dockerfile: Dockerfile
    container_name: decision-service
    restart: unless-stopped
    ports:
      - "3001:3001"   # http://localhost:3001
    env_file:
      - "./Decision Service/.env"   # PORT, DECISION_SECRET
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))"]
      interval: 10s
      timeout: 5s
      retries: 5

  logging-service:
    build:
      context: "./Logging Service"
      dockerfile: Dockerfile
    container_name: logging-service
    restart: unless-stopped
    ports:
      - "3002:3002"   # http://localhost:3002
    env_file:
      - "./Logging Service/.env"    # PORT, MONGO_URI
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3002/health',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))"]
      interval: 10s
      timeout: 5s
      retries: 5

  override-service:
    build:
      context: "./Override Service"
      dockerfile: Dockerfile
    container_name: override-service
    restart: unless-stopped
    ports:
      - "3003:3003"   # http://localhost:3003
    env_file:
      - "./Override Service/.env"   # PORT, MONGO_URI
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3003/health',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # NODE-RED
  nodered:
    build: ./NodeRED
    container_name: nodered
    restart: unless-stopped
    ports:
      - "1880:1880"
    environment:
      - TZ=Australia/Melbourne
    volumes:
      - ./NodeRED:/data
    
  # SENSOR SIMULATOR
  sensor-simulator:
    build:
      context: "./Sensor Simulator"
      dockerfile: Dockerfile
    container_name: sensor-simulator
    restart: unless-stopped
    env_file:
      - "./Sensor Simulator/.env"
    depends_on:
      - nodered